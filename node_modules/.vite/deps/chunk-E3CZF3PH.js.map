{
  "version": 3,
  "sources": ["../../@mui/x-charts/ChartsYAxis/ChartsYAxis.js"],
  "sourcesContent": ["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"scale\", \"tickNumber\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useThemeProps, useTheme, styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useCartesianContext } from \"../context/CartesianProvider/index.js\";\nimport { useTicks } from \"../hooks/useTicks.js\";\nimport { useDrawingArea } from \"../hooks/useDrawingArea.js\";\nimport { AxisRoot } from \"../internals/components/AxisSharedComponents.js\";\nimport { ChartsText } from \"../ChartsText/index.js\";\nimport { getAxisUtilityClass } from \"../ChartsAxis/axisClasses.js\";\nimport { isInfinity } from \"../internals/isInfinity.js\";\nimport { isBandScale } from \"../internals/isBandScale.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    position\n  } = ownerState;\n  const slots = {\n    root: ['root', 'directionY', position],\n    line: ['line'],\n    tickContainer: ['tickContainer'],\n    tick: ['tick'],\n    tickLabel: ['tickLabel'],\n    label: ['label']\n  };\n  return composeClasses(slots, getAxisUtilityClass, classes);\n};\nconst YAxisRoot = styled(AxisRoot, {\n  name: 'MuiChartsYAxis',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst defaultProps = {\n  position: 'left',\n  disableLine: false,\n  disableTicks: false,\n  tickFontSize: 12,\n  labelFontSize: 14,\n  tickSize: 6\n};\n\n/**\n * Demos:\n *\n * - [Axis](https://mui.com/x/react-charts/axis/)\n *\n * API:\n *\n * - [ChartsYAxis API](https://mui.com/x/api/charts/charts-y-axis/)\n */\nfunction ChartsYAxis(inProps) {\n  const {\n    yAxisIds,\n    yAxis\n  } = useCartesianContext();\n  const _yAxis = yAxis[inProps.axisId ?? yAxisIds[0]],\n    {\n      scale: yScale,\n      tickNumber\n    } = _yAxis,\n    settings = _objectWithoutPropertiesLoose(_yAxis, _excluded);\n  const themedProps = useThemeProps({\n    props: _extends({}, settings, inProps),\n    name: 'MuiChartsYAxis'\n  });\n  const defaultizedProps = _extends({}, defaultProps, themedProps);\n  const {\n    position,\n    disableLine,\n    disableTicks,\n    tickFontSize,\n    label,\n    labelFontSize,\n    labelStyle,\n    tickLabelStyle,\n    tickSize: tickSizeProp,\n    valueFormatter,\n    slots,\n    slotProps,\n    tickPlacement,\n    tickLabelPlacement,\n    tickInterval,\n    tickLabelInterval,\n    sx\n  } = defaultizedProps;\n  const theme = useTheme();\n  const isRtl = useRtl();\n  const classes = useUtilityClasses(_extends({}, defaultizedProps, {\n    theme\n  }));\n  const {\n    left,\n    top,\n    width,\n    height,\n    isPointInside\n  } = useDrawingArea();\n  const tickSize = disableTicks ? 4 : tickSizeProp;\n  const yTicks = useTicks({\n    scale: yScale,\n    tickNumber,\n    valueFormatter,\n    tickPlacement,\n    tickLabelPlacement,\n    tickInterval\n  });\n  const positionSign = position === 'right' ? 1 : -1;\n  const labelRefPoint = {\n    x: positionSign * (tickFontSize + tickSize + 10),\n    y: top + height / 2\n  };\n  const Line = slots?.axisLine ?? 'line';\n  const Tick = slots?.axisTick ?? 'line';\n  const TickLabel = slots?.axisTickLabel ?? ChartsText;\n  const Label = slots?.axisLabel ?? ChartsText;\n  const revertAnchor = !isRtl && position === 'right' || isRtl && position !== 'right';\n  const axisTickLabelProps = useSlotProps({\n    elementType: TickLabel,\n    externalSlotProps: slotProps?.axisTickLabel,\n    additionalProps: {\n      style: _extends({\n        fontSize: tickFontSize,\n        textAnchor: revertAnchor ? 'start' : 'end',\n        dominantBaseline: 'central'\n      }, tickLabelStyle)\n    },\n    className: classes.tickLabel,\n    ownerState: {}\n  });\n  const axisLabelProps = useSlotProps({\n    elementType: Label,\n    externalSlotProps: slotProps?.axisLabel,\n    additionalProps: {\n      style: _extends({\n        fontSize: labelFontSize,\n        angle: positionSign * 90,\n        textAnchor: 'middle',\n        dominantBaseline: 'auto'\n      }, labelStyle)\n    },\n    ownerState: {}\n  });\n  const lineSlotProps = useSlotProps({\n    elementType: Line,\n    externalSlotProps: slotProps?.axisLine,\n    additionalProps: {\n      strokeLinecap: 'square'\n    },\n    ownerState: {}\n  });\n  const domain = yScale.domain();\n  const ordinalAxis = isBandScale(yScale);\n  // Skip axis rendering if no data is available\n  // - The domain is an empty array for band/point scales.\n  // - The domains contains Infinity for continuous scales.\n  if (ordinalAxis && domain.length === 0 || !ordinalAxis && domain.some(isInfinity)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(YAxisRoot, {\n    transform: `translate(${position === 'right' ? left + width : left}, 0)`,\n    className: classes.root,\n    sx: sx,\n    children: [!disableLine && /*#__PURE__*/_jsx(Line, _extends({\n      y1: top,\n      y2: top + height,\n      className: classes.line\n    }, lineSlotProps)), yTicks.map(({\n      formattedValue,\n      offset,\n      labelOffset,\n      value\n    }, index) => {\n      const xTickLabel = positionSign * (tickSize + 2);\n      const yTickLabel = labelOffset;\n      const skipLabel = typeof tickLabelInterval === 'function' && !tickLabelInterval?.(value, index);\n      const showLabel = isPointInside({\n        x: -1,\n        y: offset\n      }, {\n        direction: 'y'\n      });\n      if (!showLabel) {\n        return null;\n      }\n      return /*#__PURE__*/_jsxs(\"g\", {\n        transform: `translate(0, ${offset})`,\n        className: classes.tickContainer,\n        children: [!disableTicks && /*#__PURE__*/_jsx(Tick, _extends({\n          x2: positionSign * tickSize,\n          className: classes.tick\n        }, slotProps?.axisTick)), formattedValue !== undefined && !skipLabel && /*#__PURE__*/_jsx(TickLabel, _extends({\n          x: xTickLabel,\n          y: yTickLabel,\n          text: formattedValue.toString()\n        }, axisTickLabelProps))]\n      }, index);\n    }), label && /*#__PURE__*/_jsx(\"g\", {\n      className: classes.label,\n      children: /*#__PURE__*/_jsx(Label, _extends({}, labelRefPoint, axisLabelProps, {\n        text: label\n      }))\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ChartsYAxis.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The id of the axis to render.\n   * If undefined, it will be the first defined axis.\n   */\n  axisId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If true, the axis line is disabled.\n   * @default false\n   */\n  disableLine: PropTypes.bool,\n  /**\n   * If true, the ticks are disabled.\n   * @default false\n   */\n  disableTicks: PropTypes.bool,\n  /**\n   * The fill color of the axis text.\n   * @default 'currentColor'\n   */\n  fill: PropTypes.string,\n  /**\n   * The label of the axis.\n   */\n  label: PropTypes.string,\n  /**\n   * The font size of the axis label.\n   * @default 14\n   * @deprecated Consider using `labelStyle.fontSize` instead.\n   */\n  labelFontSize: PropTypes.number,\n  /**\n   * The style applied to the axis label.\n   */\n  labelStyle: PropTypes.object,\n  /**\n   * Position of the axis.\n   */\n  position: PropTypes.oneOf(['left', 'right']),\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The stroke color of the axis line.\n   * @default 'currentColor'\n   */\n  stroke: PropTypes.string,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The font size of the axis ticks text.\n   * @default 12\n   * @deprecated Consider using `tickLabelStyle.fontSize` instead.\n   */\n  tickFontSize: PropTypes.number,\n  /**\n   * Defines which ticks are displayed.\n   * Its value can be:\n   * - 'auto' In such case the ticks are computed based on axis scale and other parameters.\n   * - a filtering function of the form `(value, index) => boolean` which is available only if the axis has \"point\" scale.\n   * - an array containing the values where ticks should be displayed.\n   * @see See {@link https://mui.com/x/react-charts/axis/#fixed-tick-positions}\n   * @default 'auto'\n   */\n  tickInterval: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.array, PropTypes.func]),\n  /**\n   * Defines which ticks get its label displayed. Its value can be:\n   * - 'auto' In such case, labels are displayed if they do not overlap with the previous one.\n   * - a filtering function of the form (value, index) => boolean. Warning: the index is tick index, not data ones.\n   * @default 'auto'\n   */\n  tickLabelInterval: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.func]),\n  /**\n   * The placement of ticks label. Can be the middle of the band, or the tick position.\n   * Only used if scale is 'band'.\n   * @default 'middle'\n   */\n  tickLabelPlacement: PropTypes.oneOf(['middle', 'tick']),\n  /**\n   * The style applied to ticks text.\n   */\n  tickLabelStyle: PropTypes.object,\n  /**\n   * Maximal step between two ticks.\n   * When using time data, the value is assumed to be in ms.\n   * Not supported by categorical axis (band, points).\n   */\n  tickMaxStep: PropTypes.number,\n  /**\n   * Minimal step between two ticks.\n   * When using time data, the value is assumed to be in ms.\n   * Not supported by categorical axis (band, points).\n   */\n  tickMinStep: PropTypes.number,\n  /**\n   * The number of ticks. This number is not guaranteed.\n   * Not supported by categorical axis (band, points).\n   */\n  tickNumber: PropTypes.number,\n  /**\n   * The placement of ticks in regard to the band interval.\n   * Only used if scale is 'band'.\n   * @default 'extremities'\n   */\n  tickPlacement: PropTypes.oneOf(['end', 'extremities', 'middle', 'start']),\n  /**\n   * The size of the ticks.\n   * @default 6\n   */\n  tickSize: PropTypes.number\n} : void 0;\nexport { ChartsYAxis };"],
  "mappings": "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",
  "names": ["_jsxs", "_jsx", "PropTypes"]
}
